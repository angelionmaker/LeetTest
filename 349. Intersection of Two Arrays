public class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
        
        ArrayList<Integer> store = new ArrayList<>();
        ArrayList<Integer> check = new ArrayList<>();
        
        if(nums1.length <= nums2.length){
            for(int i=0; i< nums2.length; i++){
                check.add(nums2[i]);
            }
            
        }
        else{
            for(int i=0; i< nums1.length; i++){
                check.add(nums1[i]);
            }
        }
        
        if(check.size()==nums1.length){
            for(int i =0; i< nums2.length; i++){
                if(check.indexOf(nums2[i]) != -1 && store.indexOf(nums2[i]) == -1){
                    store.add(nums2[i]);
                }    
            }
        }
        else{
            for(int i =0; i< nums1.length; i++){
                if(check.indexOf(nums1[i]) != -1 && store.indexOf(nums1[i]) == -1){
                    store.add(nums1[i]);
                }    
            }
        }
        int[] ans = new int[store.size()];
        for(int i =0; i< store.size(); i++){
            ans[i] = store.get(i);
        }
        return ans;
        
        
    }
}

1 Integer to int no method must use int i = intObj.intValue();

2 List<Integer> to int[] must interate

3 注意重复的问题
4 创造一个int[] 最后要考虑是否有值输出，以及是否有对于的0被输出。
public class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
        Arrays.sort(nums1);
        Arrays.sort(nums2);
        
        int i = 0, j = 0;
        int[] temp = new int[nums1.length];
        int index =0;
        while(i < nums1.length && j < nums2.length){
            if(nums1[i] == nums2[j]){
              if(index ==0 || temp[index-1]!=nums1[i] ){
                temp[index] = nums1[i];
                index++;
              }
                i++;
                j++;
            
            }
            else if(nums1[i] < nums2[j]){
                i++;
            }
            else{
                j++;
            }
        }
        int[] result = new int[index];
        for(int k=0; k< index; k++){
            result[k] = temp[k];
        }
        
        return result;
    }
}
